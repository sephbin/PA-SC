{"version":3,"sources":["registerServiceWorker.js","Components/ExampleComponent.jsx","Actions/ExampleActions.jsx","Actions/Types.jsx","Reducers/ExampleReducer.jsx","Reducers/index.jsx","Store.jsx","ExampleApp.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ExampleComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","__action1__","react_default","a","createElement","react","JSON","stringify","Component","connect","itemarray","reducedata","items","item","dispatch","fetch","result","json","data","type","payload","__action3__","address","postData","initialState","combineReducers","arguments","length","undefined","action","objectSpread","id","conditions","condition_text_html","condition_satisfied","condition_proof","condition_heirachy","parent","middleware","thunk","Store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","ExampleApp","es","store","className","Components_ExampleComponent","ReactDOM","render","src_ExampleApp","document","getElementById","URL","process","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f81d4acf.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { __action1__, __action3__ } from '../Actions/ExampleActions';\r\n\r\nclass ExampleComponent extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.props.__action1__();\r\n  }\r\n  // componentDidMount() {\r\n  //   this.timer = setInterval(() => this.props.__action1__(), 1000)\r\n  // }\r\n\r\n  render() {\r\n    // const postItems = JSON.stringify(this.props)\r\n    return (\r\n  \t<Fragment>\r\n  \t\t<div> { JSON.stringify(this.props)}</div>\r\n\t\t</Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nExampleComponent.propTypes = {\r\n  __action1__: PropTypes.func.isRequired,\r\n  __action3__: PropTypes.func.isRequired,\r\n  itemarray: PropTypes.array.isRequired,\r\n  item: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  itemarray: state.reducedata.items,\r\n  item: state.reducedata.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {__action1__, __action3__})(ExampleComponent);\r\n","import { __ACTION1__, __ACTION2__, __ACTION3__ } from './Types';\r\n\r\nexport const __action1__ = () => dispatch => {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t\t.then(result => result.json())\r\n  \t\t.then(data => dispatch({\r\n  \t\t\ttype: __ACTION1__,\r\n  \t\t\tpayload: data\r\n  \t\t}));\r\n};\r\n\r\nexport const __action2__ = (postData) => dispatch => {\r\nfetch('https://jsonplaceholder.typicode.com/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(postData)\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => dispatch({\r\n      \ttype: __ACTION2__,\r\n      \tpayload: data\r\n      }));\r\n};\r\n\r\nexport const __action3__ = (address, postData) => dispatch => {\r\nconsole.log(postData);\r\ndispatch({\r\n        type: __ACTION3__,\r\n        payload: {}\r\n      })\r\n};","export const __ACTION1__ = '__ACTION1__';\r\nexport const __ACTION2__ = '__ACTION2__';\r\nexport const __ACTION3__ = '__ACTION3__';","import { __ACTION1__, __ACTION2__, __ACTION3__ } from '../Actions/Types';\r\n\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\titem: 0\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase __ACTION1__:\r\n\t\tconsole.log('reducer dispatched');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\titem: 999\r\n\t\t\t};\r\n\t\tcase __ACTION2__:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titem: action.payload\r\n\t\t\t};\r\n\t\tcase __ACTION3__:\r\n\t\t\tconsole.log(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems : [{\"id\":2,\"conditions\":[{\"id\":4,\"condition_text_html\":\"Example Text\",\"condition_satisfied\":true,\"condition_proof\":null,\"condition_heirachy\":1,\"parent\":2}]}],\r\n\t\t\t\titem: 555\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { combineReducers } from 'redux';\r\nimport ExampleReducer from './ExampleReducer';\r\n\r\nexport default combineReducers({\r\n\treducedata : ExampleReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst Store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(\r\n\tapplyMiddleware(...middleware),\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\n\r\nexport default Store;","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ExampleComponent from './Components/ExampleComponent';\r\nimport Store from './Store.jsx';\r\n\r\n\r\n\r\n\r\nclass ExampleApp extends Component {\r\n\r\n  render() {\r\n    return (\r\n    \t<Provider store={Store}>\r\n      <div className=\"App\">\r\n      <ExampleComponent />\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// import App from './Components/App';\r\nimport ExampleApp from './ExampleApp';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\nReactDOM.render(<ExampleApp />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}